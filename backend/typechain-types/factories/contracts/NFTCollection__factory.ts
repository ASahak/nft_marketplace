/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  NFTCollection,
  NFTCollectionInterface,
} from "../../contracts/NFTCollection";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "royaltyReceiver",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "royaltyFee",
        type: "uint96",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMyNFTs",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getNFTCreatorById",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161341c38038061341c83398181016040528101906100329190610443565b82868681600090816100449190610745565b5080600190816100549190610745565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c95760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100c09190610826565b60405180910390fd5b6100d88161016660201b60201c565b5081600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600a60146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550836009908161015a9190610745565b50505050505050610841565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102938261024a565b810181811067ffffffffffffffff821117156102b2576102b161025b565b5b80604052505050565b60006102c561022c565b90506102d1828261028a565b919050565b600067ffffffffffffffff8211156102f1576102f061025b565b5b6102fa8261024a565b9050602081019050919050565b60005b8381101561032557808201518184015260208101905061030a565b60008484015250505050565b600061034461033f846102d6565b6102bb565b9050828152602081018484840111156103605761035f610245565b5b61036b848285610307565b509392505050565b600082601f83011261038857610387610240565b5b8151610398848260208601610331565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103cc826103a1565b9050919050565b6103dc816103c1565b81146103e757600080fd5b50565b6000815190506103f9816103d3565b92915050565b60006bffffffffffffffffffffffff82169050919050565b610420816103ff565b811461042b57600080fd5b50565b60008151905061043d81610417565b92915050565b60008060008060008060c087890312156104605761045f610236565b5b600087015167ffffffffffffffff81111561047e5761047d61023b565b5b61048a89828a01610373565b965050602087015167ffffffffffffffff8111156104ab576104aa61023b565b5b6104b789828a01610373565b955050604087015167ffffffffffffffff8111156104d8576104d761023b565b5b6104e489828a01610373565b94505060606104f589828a016103ea565b935050608061050689828a016103ea565b92505060a061051789828a0161042e565b9150509295509295509295565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061057657607f821691505b6020821081036105895761058861052f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026105f17fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105b4565b6105fb86836105b4565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061064261063d61063884610613565b61061d565b610613565b9050919050565b6000819050919050565b61065c83610627565b61067061066882610649565b8484546105c1565b825550505050565b600090565b610685610678565b610690818484610653565b505050565b5b818110156106b4576106a960008261067d565b600181019050610696565b5050565b601f8211156106f9576106ca8161058f565b6106d3846105a4565b810160208510156106e2578190505b6106f66106ee856105a4565b830182610695565b50505b505050565b600082821c905092915050565b600061071c600019846008026106fe565b1980831691505092915050565b6000610735838361070b565b9150826002028217905092915050565b61074e82610524565b67ffffffffffffffff8111156107675761076661025b565b5b610771825461055e565b61077c8282856106b8565b600060209050601f8311600181146107af576000841561079d578287015190505b6107a78582610729565b86555061080f565b601f1984166107bd8661058f565b60005b828110156107e5578489015182556001820191506020850194506020810190506107c0565b8683101561080257848901516107fe601f89168261070b565b8355505b6001600288020188555050505b505050505050565b610820816103c1565b82525050565b600060208201905061083b6000830184610817565b92915050565b612bcc806108506000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063b88d4fde1161007c578063b88d4fde1461034f578063c87b56dd1461036b578063e921ee6e1461039b578063e985e9c5146103cb578063eacabe14146103fb578063f2fde38b1461041757610137565b8063715018a6146102cf5780637284e416146102d95780638da5cb5b146102f757806395d89b4114610315578063a22cb4651461033357610137565b80632a55205a116100ff5780632a55205a146101f257806339ee717a1461022357806342842e0e146102535780636352211e1461026f57806370a082311461029f57610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b61015660048036038101906101519190611e2e565b610433565b6040516101639190611e76565b60405180910390f35b610174610494565b6040516101819190611f21565b60405180910390f35b6101a4600480360381019061019f9190611f79565b610526565b6040516101b19190611fe7565b60405180910390f35b6101d460048036038101906101cf919061202e565b610542565b005b6101f060048036038101906101eb919061206e565b610558565b005b61020c600480360381019061020791906120c1565b61065a565b60405161021a929190612110565b60405180910390f35b61023d60048036038101906102389190611f79565b6106cc565b60405161024a9190611fe7565b60405180910390f35b61026d6004803603810190610268919061206e565b610709565b005b61028960048036038101906102849190611f79565b610729565b6040516102969190611fe7565b60405180910390f35b6102b960048036038101906102b49190612139565b61073b565b6040516102c69190612166565b60405180910390f35b6102d76107f5565b005b6102e1610809565b6040516102ee9190611f21565b60405180910390f35b6102ff610897565b60405161030c9190611fe7565b60405180910390f35b61031d6108c1565b60405161032a9190611f21565b60405180910390f35b61034d600480360381019061034891906121ad565b610953565b005b61036960048036038101906103649190612322565b610969565b005b61038560048036038101906103809190611f79565b61098e565b6040516103929190611f21565b60405180910390f35b6103b560048036038101906103b09190612139565b610aa1565b6040516103c29190612463565b60405180910390f35b6103e560048036038101906103e09190612485565b610ba5565b6040516103f29190611e76565b60405180910390f35b61041560048036038101906104109190612566565b610c39565b005b610431600480360381019061042c9190612139565b610ccb565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048d575061048c82610d51565b5b9050919050565b6060600080546104a3906125f1565b80601f01602080910402602001604051908101604052809291908181526020018280546104cf906125f1565b801561051c5780601f106104f15761010080835404028352916020019161051c565b820191906000526020600020905b8154815290600101906020018083116104ff57829003601f168201915b5050505050905090565b600061053182610e33565b5061053b82610ebb565b9050919050565b610554828261054f610ef8565b610f00565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105ca5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105c19190611fe7565b60405180910390fd5b60006105de83836105d9610ef8565b610f12565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610654578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161064b93929190612622565b60405180910390fd5b50505050565b600080600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16612710600a60149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16856106b79190612688565b6106c191906126f9565b915091509250929050565b6000600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b61072483838360405180602001604052806000815250610969565b505050565b600061073482610e33565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107ae5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107a59190611fe7565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6107fd61112c565b61080760006111b3565b565b60098054610816906125f1565b80601f0160208091040260200160405190810160405280929190818152602001828054610842906125f1565b801561088f5780601f106108645761010080835404028352916020019161088f565b820191906000526020600020905b81548152906001019060200180831161087257829003601f168201915b505050505081565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108d0906125f1565b80601f01602080910402602001604051908101604052809291908181526020018280546108fc906125f1565b80156109495780601f1061091e57610100808354040283529160200191610949565b820191906000526020600020905b81548152906001019060200180831161092c57829003601f168201915b5050505050905090565b61096561095e610ef8565b8383611279565b5050565b610974848484610558565b61098861097f610ef8565b858585856113e8565b50505050565b606061099982610e33565b5060006006600084815260200190815260200160002080546109ba906125f1565b80601f01602080910402602001604051908101604052809291908181526020018280546109e6906125f1565b8015610a335780601f10610a0857610100808354040283529160200191610a33565b820191906000526020600020905b815481529060010190602001808311610a1657829003601f168201915b505050505090506000610a44611599565b90506000815103610a59578192505050610a9c565b600082511115610a8e578082604051602001610a76929190612766565b60405160208183030381529060405292505050610a9c565b610a97846115b0565b925050505b919050565b60606000610aae8361073b565b905060008167ffffffffffffffff811115610acc57610acb6121f7565b5b604051908082528060200260200182016040528015610afa5781602001602082028036833780820191505090505b5090506000805b83811015610b99576000600182610b18919061278a565b90508673ffffffffffffffffffffffffffffffffffffffff16610b3a82610729565b73ffffffffffffffffffffffffffffffffffffffff1614610b5b5750610b8c565b80848481518110610b6f57610b6e6127be565b5b602002602001018181525050600183610b88919061278a565b9250505b8080600101915050610b01565b50819350505050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610c4161112c565b60086000815480929190610c54906127ed565b919050555060006008549050610c6a8382611619565b82600b600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610cc68183611637565b505050565b610cd361112c565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d455760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d3c9190611fe7565b60405180910390fd5b610d4e816111b3565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610e1c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610e2c5750610e2b82611693565b5b9050919050565b600080610e3f836116fd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610eb257826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610ea99190612166565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610f0d838383600161173a565b505050565b600080610f1e846116fd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610f6057610f5f8184866118ff565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ff157610fa260008560008061173a565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614611074576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b611134610ef8565b73ffffffffffffffffffffffffffffffffffffffff16611152610897565b73ffffffffffffffffffffffffffffffffffffffff16146111b157611175610ef8565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111a89190611fe7565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112ea57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112e19190611fe7565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516113db9190611e76565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611592578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401611447949392919061288a565b6020604051808303816000875af192505050801561148357506040513d601f19601f8201168201806040525081019061148091906128eb565b60015b611507573d80600081146114b3576040519150601f19603f3d011682016040523d82523d6000602084013e6114b8565b606091505b5060008151036114ff57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114f69190611fe7565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461159057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115879190611fe7565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606115bb82610e33565b5060006115c6611599565b905060008151116115e65760405180602001604052806000815250611611565b806115f0846119c3565b604051602001611601929190612766565b6040516020818303038152906040525b915050919050565b611633828260405180602001604052806000815250611a91565b5050565b806006600084815260200190815260200160002090816116579190612ac4565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516116879190612166565b60405180910390a15050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806117735750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156118a757600061178384610e33565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117ee57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561180157506117ff8184610ba5565b155b1561184357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161183a9190611fe7565b60405180910390fd5b81156118a557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b61190a838383611ab5565b6119be57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361197f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119769190612166565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119b5929190612110565b60405180910390fd5b505050565b6060600060016119d284611b76565b01905060008167ffffffffffffffff8111156119f1576119f06121f7565b5b6040519080825280601f01601f191660200182016040528015611a235781602001600182028036833780820191505090505b509050600082602001820190505b600115611a86578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611a7a57611a796126ca565b5b04945060008503611a31575b819350505050919050565b611a9b8383611cc9565b611ab0611aa6610ef8565b60008585856113e8565b505050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b6d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b2e5750611b2d8484610ba5565b5b80611b6c57508273ffffffffffffffffffffffffffffffffffffffff16611b5483610ebb565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611bd4577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611bca57611bc96126ca565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611c11576d04ee2d6d415b85acef81000000008381611c0757611c066126ca565b5b0492506020810190505b662386f26fc100008310611c4057662386f26fc100008381611c3657611c356126ca565b5b0492506010810190505b6305f5e1008310611c69576305f5e1008381611c5f57611c5e6126ca565b5b0492506008810190505b6127108310611c8e576127108381611c8457611c836126ca565b5b0492506004810190505b60648310611cb15760648381611ca757611ca66126ca565b5b0492506002810190505b600a8310611cc0576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d3b5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611d329190611fe7565b60405180910390fd5b6000611d4983836000610f12565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611dbd5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611db49190611fe7565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611e0b81611dd6565b8114611e1657600080fd5b50565b600081359050611e2881611e02565b92915050565b600060208284031215611e4457611e43611dcc565b5b6000611e5284828501611e19565b91505092915050565b60008115159050919050565b611e7081611e5b565b82525050565b6000602082019050611e8b6000830184611e67565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611ecb578082015181840152602081019050611eb0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ef382611e91565b611efd8185611e9c565b9350611f0d818560208601611ead565b611f1681611ed7565b840191505092915050565b60006020820190508181036000830152611f3b8184611ee8565b905092915050565b6000819050919050565b611f5681611f43565b8114611f6157600080fd5b50565b600081359050611f7381611f4d565b92915050565b600060208284031215611f8f57611f8e611dcc565b5b6000611f9d84828501611f64565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611fd182611fa6565b9050919050565b611fe181611fc6565b82525050565b6000602082019050611ffc6000830184611fd8565b92915050565b61200b81611fc6565b811461201657600080fd5b50565b60008135905061202881612002565b92915050565b6000806040838503121561204557612044611dcc565b5b600061205385828601612019565b925050602061206485828601611f64565b9150509250929050565b60008060006060848603121561208757612086611dcc565b5b600061209586828701612019565b93505060206120a686828701612019565b92505060406120b786828701611f64565b9150509250925092565b600080604083850312156120d8576120d7611dcc565b5b60006120e685828601611f64565b92505060206120f785828601611f64565b9150509250929050565b61210a81611f43565b82525050565b60006040820190506121256000830185611fd8565b6121326020830184612101565b9392505050565b60006020828403121561214f5761214e611dcc565b5b600061215d84828501612019565b91505092915050565b600060208201905061217b6000830184612101565b92915050565b61218a81611e5b565b811461219557600080fd5b50565b6000813590506121a781612181565b92915050565b600080604083850312156121c4576121c3611dcc565b5b60006121d285828601612019565b92505060206121e385828601612198565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61222f82611ed7565b810181811067ffffffffffffffff8211171561224e5761224d6121f7565b5b80604052505050565b6000612261611dc2565b905061226d8282612226565b919050565b600067ffffffffffffffff82111561228d5761228c6121f7565b5b61229682611ed7565b9050602081019050919050565b82818337600083830152505050565b60006122c56122c084612272565b612257565b9050828152602081018484840111156122e1576122e06121f2565b5b6122ec8482856122a3565b509392505050565b600082601f830112612309576123086121ed565b5b81356123198482602086016122b2565b91505092915050565b6000806000806080858703121561233c5761233b611dcc565b5b600061234a87828801612019565b945050602061235b87828801612019565b935050604061236c87828801611f64565b925050606085013567ffffffffffffffff81111561238d5761238c611dd1565b5b612399878288016122f4565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6123da81611f43565b82525050565b60006123ec83836123d1565b60208301905092915050565b6000602082019050919050565b6000612410826123a5565b61241a81856123b0565b9350612425836123c1565b8060005b8381101561245657815161243d88826123e0565b9750612448836123f8565b925050600181019050612429565b5085935050505092915050565b6000602082019050818103600083015261247d8184612405565b905092915050565b6000806040838503121561249c5761249b611dcc565b5b60006124aa85828601612019565b92505060206124bb85828601612019565b9150509250929050565b600067ffffffffffffffff8211156124e0576124df6121f7565b5b6124e982611ed7565b9050602081019050919050565b6000612509612504846124c5565b612257565b905082815260208101848484011115612525576125246121f2565b5b6125308482856122a3565b509392505050565b600082601f83011261254d5761254c6121ed565b5b813561255d8482602086016124f6565b91505092915050565b6000806040838503121561257d5761257c611dcc565b5b600061258b85828601612019565b925050602083013567ffffffffffffffff8111156125ac576125ab611dd1565b5b6125b885828601612538565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061260957607f821691505b60208210810361261c5761261b6125c2565b5b50919050565b60006060820190506126376000830186611fd8565b6126446020830185612101565b6126516040830184611fd8565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061269382611f43565b915061269e83611f43565b92508282026126ac81611f43565b915082820484148315176126c3576126c2612659565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061270482611f43565b915061270f83611f43565b92508261271f5761271e6126ca565b5b828204905092915050565b600081905092915050565b600061274082611e91565b61274a818561272a565b935061275a818560208601611ead565b80840191505092915050565b60006127728285612735565b915061277e8284612735565b91508190509392505050565b600061279582611f43565b91506127a083611f43565b92508282019050808211156127b8576127b7612659565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006127f882611f43565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361282a57612829612659565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b600061285c82612835565b6128668185612840565b9350612876818560208601611ead565b61287f81611ed7565b840191505092915050565b600060808201905061289f6000830187611fd8565b6128ac6020830186611fd8565b6128b96040830185612101565b81810360608301526128cb8184612851565b905095945050505050565b6000815190506128e581611e02565b92915050565b60006020828403121561290157612900611dcc565b5b600061290f848285016128d6565b91505092915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261297a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261293d565b612984868361293d565b95508019841693508086168417925050509392505050565b6000819050919050565b60006129c16129bc6129b784611f43565b61299c565b611f43565b9050919050565b6000819050919050565b6129db836129a6565b6129ef6129e7826129c8565b84845461294a565b825550505050565b600090565b612a046129f7565b612a0f8184846129d2565b505050565b5b81811015612a3357612a286000826129fc565b600181019050612a15565b5050565b601f821115612a7857612a4981612918565b612a528461292d565b81016020851015612a61578190505b612a75612a6d8561292d565b830182612a14565b50505b505050565b600082821c905092915050565b6000612a9b60001984600802612a7d565b1980831691505092915050565b6000612ab48383612a8a565b9150826002028217905092915050565b612acd82611e91565b67ffffffffffffffff811115612ae657612ae56121f7565b5b612af082546125f1565b612afb828285612a37565b600060209050601f831160018114612b2e5760008415612b1c578287015190505b612b268582612aa8565b865550612b8e565b601f198416612b3c86612918565b60005b82811015612b6457848901518255600182019150602085019450602081019050612b3f565b86831015612b815784890151612b7d601f891682612a8a565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220b21c227d83073ec3c7b327b0b88c82fe8acfe3c2fb24ca0cc70bf1d0419e94a864736f6c634300081c0033";

type NFTCollectionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTCollectionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTCollection__factory extends ContractFactory {
  constructor(...args: NFTCollectionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    _description: string,
    creator: AddressLike,
    royaltyReceiver: AddressLike,
    royaltyFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      _description,
      creator,
      royaltyReceiver,
      royaltyFee,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    _description: string,
    creator: AddressLike,
    royaltyReceiver: AddressLike,
    royaltyFee: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name,
      symbol,
      _description,
      creator,
      royaltyReceiver,
      royaltyFee,
      overrides || {}
    ) as Promise<
      NFTCollection & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTCollection__factory {
    return super.connect(runner) as NFTCollection__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTCollectionInterface {
    return new Interface(_abi) as NFTCollectionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NFTCollection {
    return new Contract(address, _abi, runner) as unknown as NFTCollection;
  }
}
