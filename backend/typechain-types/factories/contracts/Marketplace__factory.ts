/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Marketplace,
  MarketplaceInterface,
} from "../../contracts/Marketplace";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "marketItemId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "MarketItemListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "NFTSold",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_marketItemId",
        type: "uint256",
      },
    ],
    name: "buyNFT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getListingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listNFT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "marketItemId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "nftContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "seller",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405266038d7ea4c68000600255348015601a57600080fd5b50600160008190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611302806100736000396000f3fe60806040526004361061003e5760003560e01c806207df3014610043578063a82ba76f14610086578063ad05f1b4146100a2578063b8fe6abe146100d2575b600080fd5b34801561004f57600080fd5b5061006a60048036038101906100659190610d3a565b6100fd565b60405161007d9796959493929190610db9565b60405180910390f35b6100a0600480360381019061009b9190610d3a565b6101cc565b005b6100bc60048036038101906100b79190610e28565b610652565b6040516100c99190610e7b565b60405180910390f35b3480156100de57600080fd5b506100e7610c47565b6040516100f49190610e7b565b60405180910390f35b6004602052816000526040600020602052806000526040600020600091509150508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060060154905087565b6101d4610c51565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000206006015490506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206002015490508134146102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bd90610f19565b60405180910390fd5b33600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610411573d6000803e3d6000fd5b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd3033846040518463ffffffff1660e01b815260040161044f93929190610f39565b600060405180830381600087803b15801561046957600080fd5b505af115801561047d573d6000803e3d6000fd5b50505050600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008481526020019081526020016000206000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556004820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560068201600090555050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f193505050501580156105f2573d6000803e3d6000fd5b50808473ffffffffffffffffffffffffffffffffffffffff167f5f56b86d7e7069e97b2fb6f4bbfe88ee51f79e56760d02a0ba2114eb274600f6338560405161063c929190610f70565b60405180910390a3505061064e610c97565b5050565b600061065c610c51565b60008490503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016106b19190610e7b565b602060405180830381865afa1580156106ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f29190610fae565b73ffffffffffffffffffffffffffffffffffffffff1614610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f90611027565b60405180910390fd5b600254341461078c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610783906110b9565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1663081812fc866040518263ffffffff1660e01b81526004016107dc9190610e7b565b602060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081d9190610fae565b73ffffffffffffffffffffffffffffffffffffffff1614610873576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086a90611125565b60405180910390fd5b600083116108b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ad90611191565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff16636352211e866040518263ffffffff1660e01b81526004016108f19190610e7b565b602060405180830381865afa15801561090e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109329190610fae565b905060016000815480929190610947906111e0565b91905055506040518060e0016040528060015481526020018773ffffffffffffffffffffffffffffffffffffffff1681526020018681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200185815250600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060015481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060c082015181600601559050508573ffffffffffffffffffffffffffffffffffffffff166323b872dd3330886040518463ffffffff1660e01b8152600401610ba693929190610f39565b600060405180830381600087803b158015610bc057600080fd5b505af1158015610bd4573d6000803e3d6000fd5b50505050848673ffffffffffffffffffffffffffffffffffffffff166001547fede8a645c2e62be3c5746f1ac221dedd08f670e54e51adee8722143ef7900013843360008a604051610c299493929190611287565b60405180910390a460015492505050610c40610c97565b9392505050565b6000600254905090565b600260005403610c8d576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600081905550565b6001600081905550565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cd182610ca6565b9050919050565b610ce181610cc6565b8114610cec57600080fd5b50565b600081359050610cfe81610cd8565b92915050565b6000819050919050565b610d1781610d04565b8114610d2257600080fd5b50565b600081359050610d3481610d0e565b92915050565b60008060408385031215610d5157610d50610ca1565b5b6000610d5f85828601610cef565b9250506020610d7085828601610d25565b9150509250929050565b610d8381610d04565b82525050565b610d9281610cc6565b82525050565b6000610da382610ca6565b9050919050565b610db381610d98565b82525050565b600060e082019050610dce600083018a610d7a565b610ddb6020830189610d89565b610de86040830188610d7a565b610df56060830187610daa565b610e026080830186610daa565b610e0f60a0830185610daa565b610e1c60c0830184610d7a565b98975050505050505050565b600080600060608486031215610e4157610e40610ca1565b5b6000610e4f86828701610cef565b9350506020610e6086828701610d25565b9250506040610e7186828701610d25565b9150509250925092565b6000602082019050610e906000830184610d7a565b92915050565b600082825260208201905092915050565b7f506c65617365207375626d6974207468652061736b696e67207072696365206960008201527f6e206f7264657220746f20636f6e74696e756500000000000000000000000000602082015250565b6000610f03603383610e96565b9150610f0e82610ea7565b604082019050919050565b60006020820190508181036000830152610f3281610ef6565b9050919050565b6000606082019050610f4e6000830186610d89565b610f5b6020830185610d89565b610f686040830184610d7a565b949350505050565b6000604082019050610f856000830185610d89565b610f926020830184610d7a565b9392505050565b600081519050610fa881610cd8565b92915050565b600060208284031215610fc457610fc3610ca1565b5b6000610fd284828501610f99565b91505092915050565b7f4e6f7420746865206f776e657200000000000000000000000000000000000000600082015250565b6000611011600d83610e96565b915061101c82610fdb565b602082019050919050565b6000602082019050818103600083015261104081611004565b9050919050565b7f596f75206861766520746f20706179206578616374206c697374696e6720666560008201527f6521000000000000000000000000000000000000000000000000000000000000602082015250565b60006110a3602283610e96565b91506110ae82611047565b604082019050919050565b600060208201905081810360008301526110d281611096565b9050919050565b7f4d61726b6574706c616365206e6f7420617070726f7665640000000000000000600082015250565b600061110f601883610e96565b915061111a826110d9565b602082019050919050565b6000602082019050818103600083015261113e81611102565b9050919050565b7f5072696365206d7573742062652067726561746572207468616e203000000000600082015250565b600061117b601c83610e96565b915061118682611145565b602082019050919050565b600060208201905081810360008301526111aa8161116e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111eb82610d04565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361121d5761121c6111b1565b5b600182019050919050565b6000819050919050565b600061124d61124861124384610ca6565b611228565b610ca6565b9050919050565b600061125f82611232565b9050919050565b600061127182611254565b9050919050565b61128181611266565b82525050565b600060808201905061129c6000830187611278565b6112a96020830186611278565b6112b66040830185611278565b6112c36060830184610d7a565b9594505050505056fea2646970667358221220bf815542076bf402cfc83bd714dd5de3bba6d3d219603421cc1eb816141b4c5364736f6c634300081c0033";

type MarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Marketplace__factory extends ContractFactory {
  constructor(...args: MarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Marketplace & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Marketplace__factory {
    return super.connect(runner) as Marketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketplaceInterface {
    return new Interface(_abi) as MarketplaceInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Marketplace {
    return new Contract(address, _abi, runner) as unknown as Marketplace;
  }
}
